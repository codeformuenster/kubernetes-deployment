# # from https://github.com/jetstack/kube-lego/issues/99#issuecomment-316978562
#
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#     name: lego
# rules:
# # must be able to get / create / delete services to manage the kube-lego-nginx service
# # TODO: this should actually be a namespaced Role, with a distinct name
# # More TODO: why does kube-lego even need to manage this? Why can't it be created
# # at instantiation time?
# - apiGroups:
#   - ""
#   resources:
#   - services
#   verbs:
#   - create
#   - get
#   - delete
# # Not sur if ingress/status is needed
# # TODO: this should be trimmed further, I don't see any use of PATCH and UPDATE insofar
# - apiGroups:
#   - extensions
#   resources:
#   - ingresses
#   - ingresses/status
#   verbs:
#   - get
#   - update
#   - create
#   - list
#   - patch
#   - delete
#   - watch
# # allow global access to manage secrets (to write the keys)
# - apiGroups:
#   - ""
#   resources:
#   - secrets
#   verbs:
#   - get
#   - create
#   - update
# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRoleBinding
# metadata:
#   name: lego
# roleRef:
#   apiGroup: rbac.authorization.k8s.io
#   kind: ClusterRole
#   name: lego
# subjects:
#   - kind: ServiceAccount
#     name: lego
#     namespace: kube-lego
# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: lego
#   namespace: kube-lego
