apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: testing1-sensor
  labels:
    sensors.argoproj.io/sensor-controller-instanceid: argo-events
    # sensor controller will use this label to match with it's own version
    # do not remove
    argo-events-sensor-version: v0.10
spec:
  template:
    spec:
      containers:
      - name: "sensor"
        image: "argoproj/sensor:v0.10"
      serviceAccountName: argo-events-sa
  dependencies:
  - name: "webhook-gateway:testing1"
  eventProtocol:
    type: "HTTP"
    http:
      port: "9300"
  triggers:
  - template:
      name: webhook-workflow-trigger
      group: argoproj.io
      version: v1alpha1
      kind: Workflow
      source:
        # script templates provide a way to run arbitary snippets of code
        # in any language, to produce a output "result" via the standard out
        # of the template. Results can then be referenced using the variable,
        # {{steps.<stepname>.outputs.result}}, and used as parameter to other
        # templates, and in 'when', and 'withParam' clauses.
        # This example demonstrates the use of a python script to
        # generate a random number which is printed in the next step.
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          generateName: scripts-python-
        spec:
          entrypoint: python-script-example
          templates:
          - name: python-script-example
            steps:
            - - name: generate
                template: gen-random-int
            - - name: print
                template: print-message
                arguments:
                  parameters:
                  - name: message
                    value: "{{steps.generate.outputs.result}}"

          - name: gen-random-int
            script:
              image: python:alpine3.6
              command: [python]
              source: |
                import random
                i = random.randint(1, 100)
                print(i)
          - name: print-message
            inputs:
              parameters:
              - name: message
            container:
              image: alpine:latest
              command: [sh, -c]
              args: ["echo result was: {{inputs.parameters.message}}"]

    # resourceParameters:
    # - src:
    #     event: "webhook-gateway:events-v0"
    #   dest: spec.arguments.parameters.0.value
