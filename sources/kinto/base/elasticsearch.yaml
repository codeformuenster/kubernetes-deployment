---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: kinto
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine
spec:
  ports:
  - name: api
    port: 9200
    targetPort: 9200
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-cluster
  namespace: kinto
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine
  # annotations:
  #   service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 9300
    # protocol: TCP
    targetPort: 9300
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine
  # sessionAffinity: None


# elasticsearch.yml:
#   discovery.zen:
#     minimum_master_nodes: ${NODE_QUORUM}
#     ping.unicast.hosts: elasticsearch-cluster

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch
  namespace: kinto
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine
data:
  elasticsearch.yml: |
    cluster.name: full-stack-cluster
    node.name: node-1
    path.data: /usr/share/elasticsearch/data
    http:
      host: 0.0.0.0
      port: 9200
    bootstrap.memory_lock: true
    transport.host: 127.0.0.1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: kinto
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: searchengine
spec:
  replicas: 1
  selector:
    matchLabels:
    labels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: searchengine
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: searchengine
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: affinity/elasticsearch
      #           operator: In
      #           values:
      #           - "true"
      # serviceAccountName: elasticsearch
      # initContainers:
      # - name: set-vm-max-map-count
      #   image: busybox
      #   imagePullPolicy: IfNotPresent
      #   command: ['sysctl', '-w', 'vm.max_map_count=262144']
      #   securityContext:
      #     privileged: true
      # - name: volume-mount-hack
      #   image: busybox
      #   command: ["sh", "-c", "chown -R 1000:100 /usr/share/elasticsearch/data"]
      #   volumeMounts:
      #   - name: data
      #     mountPath: /usr/share/elasticsearch/data
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
        # env:
        # - name: ES_JAVA_OPTS
        #   value: -Xms1024m -Xmx1024m
        #   # ES_MEM_LIMIT=2g
        #   # ES_JVM_HEAP=1024m
        ports:
        - containerPort: 9200
        - containerPort: 9300
        # FIXME port 9300 for cluster?
        # resources:
        #   limits:
        #     # memory: "2147483648"
        #     memory: 3Gi
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: data
          mountPath: /usr/share/elasticsearch/data
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: 1000
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: elasticsearch
      - name: data
        persistentVolumeClaim:
          claimName: elasticsearch
      # - name: data
      #   hostPath:
      #     path: /srv/elasticsearch-data2
      # - name: data
      #   emptyDir: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch
  namespace: kinto
spec:
  storageClassName: FIXME
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10G

# ---
# apiVersion: rbac.authorization.k8s.io/v1beta1
# kind: ClusterRole
# metadata:
#   name: elasticsearch
#   namespace: kinto
#   labels:
#     app: kinto
#     component: elasticsearch
# rules:
# - apiGroups:
#   - extensions
#   resources:
#   - podsecuritypolicies
#   resourceNames:
#   - elasticsearch
#   verbs:
#   - use

# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: elasticsearch
#   namespace: kinto
#   labels:
#     app: kinto
#     component: elasticsearch
# subjects:
# - kind: ServiceAccount
#   name: elasticsearch
#   namespace: kinto
# roleRef:
#   kind: ClusterRole
#   name: elasticsearch
#   apiGroup: rbac.authorization.k8s.io

# ---
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: elasticsearch
#   namespace: kinto
#   labels:
#     app: kinto
#     component: elasticsearch

# ---
# apiVersion: extensions/v1beta1
# kind: PodSecurityPolicy
# metadata:
#   name: elasticsearch
#   namespace: kinto
#   labels:
#     app: kinto
#     component: elasticsearch
# spec:
#   fsGroup:
#     rule: RunAsAny
#   privileged: true
#   #^ FIXME still needed?
#   runAsUser:
#     rule: RunAsAny
#   seLinux:
#     rule: RunAsAny
#   allowedCapabilities:
#   - 'IPC_LOCK'
#   - 'SYS_RESOURCE'
#   supplementalGroups:
#     rule: RunAsAny
#   volumes:
#   - '*'
#   hostPID: true
#   hostIPC: true
#   hostNetwork: true
#   hostPorts:
#   - min: 1
#     max: 65536
