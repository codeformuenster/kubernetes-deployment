---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kinto
  labels:
    app.kubernetes.io/name: kinto
    app.kubernetes.io/component: datastore
  # annotations:
  #   certmanager.k8s.io/cluster-issuer: letsencrypt
  #   kubernetes.io/tls-acme: "true"
  #   # nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
  #   # nginx.ingress.kubernetes.io/rewrite-target: "/"
spec:
  rules:
  - host: FIXME
    http:
      paths:
      - path: /
        backend:
          serviceName: kinto
          servicePort: api
  tls:
  - hosts:
    - FIXME
    secretName: kinto-tls

---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: kinto
  labels:
    app.kubernetes.io/name: kinto
    app.kubernetes.io/component: datastore
spec:
  secretName: kinto-tls
  commonName: FIXME
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt

---
apiVersion: v1
kind: Service
metadata:
  name: kinto
  labels:
    app.kubernetes.io/name: kinto
    app.kubernetes.io/component: datastore
spec:
  ports:
  - name: api
    port: 8888
    targetPort: api
  selector:
    app.kubernetes.io/name: kinto

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kinto
  labels:
    app.kubernetes.io/name: kinto
    app.kubernetes.io/component: datastore
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kinto
        app.kubernetes.io/component: datastore
    spec:
      containers:
      - name: kinto
        image: kinto/kinto-server:13.0.1
        env:
        - name: KINTO_STORAGE_URL
          valueFrom:
            secretKeyRef:
              name: kinto
              key: postgres-url
        - name: KINTO_PERMISSION_URL
          valueFrom:
            secretKeyRef:
              name: kinto
              key: postgres-url
        ports:
        - name: api
          containerPort: 8888
        volumeMounts:
        - name: config
          mountPath: /etc/kinto
      volumes:
      - name: config
        configMap:
          name: kinto