apiVersion: v1
data:
  kinto.ini: |
    [server:main]
    use = egg:waitress#main
    host = 0.0.0.0
    port = %(http_port)s

    [app:main]
    use = egg:kinto

    kinto.includes = kinto.plugins.default_bucket
                        kinto.plugins.admin
                        kinto.plugins.accounts

    kinto.storage_backend = kinto.core.storage.postgresql

    kinto.permission_backend = kinto.core.permission.postgresql

    kinto.experimental_collection_schema_validation = True

    # kinto.userid_hmac_secret = {secret}
    multiauth.policies = account

    multiauth.policy.account.use = kinto.plugins.accounts.authentication.AccountsAuthenticationPolicy
    # multiauth.policy.account.use = kinto.plugins.accounts.AccountsPolicy

    # Allow anyone to create accounts.
    kinto.account_create_principals = system.Everyone
    # Set user 'account:admin' as the administrator.
    kinto.account_write_principals = account:admin
    # Allow administrators to create buckets
    kinto.bucket_create_principals = account:admin


    [loggers]
    keys = root, kinto

    [handlers]
    keys = console

    [formatters]
    keys = color

    [logger_root]
    level = INFO
    handlers = console

    [logger_kinto]
    level = DEBUG
    handlers = console
    qualname = kinto

    [handler_console]
    class = StreamHandler
    args = (sys.stderr,)
    level = NOTSET
    formatter = color

    [formatter_color]
    class = logging_color_formatter.ColorFormatter
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/part-of: kinto
  name: kinto-64h2fkm967
  namespace: shared-test
---
apiVersion: v1
data:
  database: a2ludG8=
  password: WmxsemN5OUJUblo0U3paa2RGQTVVVUpTZGt4WU5WSm1PSFIzZW5jeVNuTklXVll5YjFSc04xaFZPRDA9
  username: a2ludG8=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/part-of: kinto
  name: postgres-6hg6k7ftht
  namespace: shared-test
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: datastore
    app.kubernetes.io/name: kinto
    app.kubernetes.io/part-of: kinto
  name: kinto
  namespace: shared-test
spec:
  ports:
  - name: api
    port: 8888
    targetPort: api
  selector:
    app.kubernetes.io/name: kinto
    app.kubernetes.io/part-of: kinto
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: kinto
  name: postgres
  namespace: shared-test
spec:
  ports:
  - name: pgql
    port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: kinto
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: datastore
    app.kubernetes.io/name: kinto
    app.kubernetes.io/part-of: kinto
  name: kinto
  namespace: shared-test
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: kinto
  template:
    metadata:
      labels:
        app.kubernetes.io/component: datastore
        app.kubernetes.io/name: kinto
        app.kubernetes.io/part-of: kinto
    spec:
      containers:
      - env:
        - name: KINTO_STORAGE_URL
          valueFrom:
            secretKeyRef:
              key: postgres-url
              name: kinto
        - name: KINTO_PERMISSION_URL
          valueFrom:
            secretKeyRef:
              key: postgres-url
              name: kinto
        image: kinto/kinto-server:13.2.2
        name: kinto
        ports:
        - containerPort: 8888
          name: api
        volumeMounts:
        - mountPath: /etc/kinto
          name: config
      volumes:
      - configMap:
          name: kinto-64h2fkm967
        name: config
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: kinto
  name: postgres
  namespace: shared-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/name: postgres
      app.kubernetes.io/part-of: kinto
  serviceName: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/name: postgres
        app.kubernetes.io/part-of: kinto
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: postgres-6hg6k7ftht
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-6hg6k7ftht
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: database
              name: postgres-6hg6k7ftht
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:11
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: data
          subPath: pgdata
      terminationGracePeriodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      labels:
        app.kubernetes.io/part-of: kinto
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: datastore
    app.kubernetes.io/name: kinto
    app.kubernetes.io/part-of: kinto
  name: kinto
  namespace: shared-test
spec:
  commonName: kinto.codeformuenster.org
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt
  secretName: kinto-tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/component: datastore
    app.kubernetes.io/name: kinto
    app.kubernetes.io/part-of: kinto
  name: kinto
  namespace: shared-test
spec:
  rules:
  - host: kinto.codeformuenster.org
    http:
      paths:
      - backend:
          serviceName: kinto
          servicePort: api
        path: /
  tls:
  - hosts:
    - kinto.codeformuenster.org
    secretName: kinto-tls
