apiVersion: v1
kind: Service
metadata:
  name: meine-stadt-transparent
  labels:
    app.kubernetes.io/name: meine-stadt-transparent
    app.kubernetes.io/component: django
    app.kubernetes.io/part-of: meine-stadt-transparent
spec:
  ports:
  - port: 8000
  selector:
    app.kubernetes.io/name: meine-stadt-transparent
    app.kubernetes.io/component: django
    app.kubernetes.io/part-of: meine-stadt-transparent

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meine-stadt-transparent
  labels:
    app.kubernetes.io/name: meine-stadt-transparent
    app.kubernetes.io/component: django
    app.kubernetes.io/part-of: meine-stadt-transparent
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: meine-stadt-transparent
      app.kubernetes.io/component: django
      app.kubernetes.io/part-of: meine-stadt-transparent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: meine-stadt-transparent
        app.kubernetes.io/component: django
        app.kubernetes.io/part-of: meine-stadt-transparent
    spec:
      containers:
      - name: meine-stadt-transparent
        image: konstin2/meine-stadt-transparent:latest
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: caddyfile
          mountPath: /etc/Caddyfile
          subPath: Caddyfile
        - name: realtime-feed-volume
          mountPath: /srv
          readOnly: true
      volumes:
      - name: caddyfile
        configMap:
          name: caddyfile
      - name: realtime-feed-volume
        persistentVolumeClaim:
          claimName: meine-stadt-transparent-volume
