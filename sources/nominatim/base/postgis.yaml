# based on https://raw.githubusercontent.com/Kong/kubernetes-ingress-controller/master/deploy/single/all-in-one-postgres.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: postgis
  labels:
    app.kubernetes.io/name: postgis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nominatim-geocoder
spec:
  ports:
  - name: pgql
    port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app.kubernetes.io/name: postgis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nominatim-geocoder

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgis-data
  labels:
    app.kubernetes.io/name: postgis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nominatim-geocoder
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10G

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgis
  labels:
    app.kubernetes.io/name: postgis
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: nominatim-geocoder
spec:
  serviceName: postgis
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgis
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: nominatim-geocoder
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgis
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: nominatim-geocoder
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: postgis-data
      initContainers:
      - name: init
        image: mediagis/nominatim:3.4
        # image: localhost:5000/nominatim:3.4
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/11
        env:
        - name: PGDIR
          value: /var/lib/postgresql/11
        - name: PGDATA
          value: /var/lib/postgresql/11/main
        command:
        - /usr/bin/bash
        - -c
        args:
        - |
          set -ex
          if [ ! -f "${PGDIR}/initialized" ]; then
            rm -rf "${PGDATA}"
            mkdir -p "${PGDATA}"
            chown -R postgres:postgres "${PGDATA}"
            sudo -u postgres /usr/lib/postgresql/11/bin/initdb -D "${PGDATA}"
            sudo -u postgres /usr/lib/postgresql/11/bin/pg_ctl -o "-c listen_addresses=''" -D "${PGDATA}" start
            sudo -u postgres psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='nominatim'" | grep -q 1 || sudo -u postgres createuser -s nominatim
            sudo -u postgres psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='www-data'" | grep -q 1 || sudo -u postgres createuser -SDR www-data
            sudo -u postgres psql postgres -c "DROP DATABASE IF EXISTS nominatim"
            sudo -u postgres /usr/lib/postgresql/11/bin/pg_ctl -D "${PGDATA}" -m fast -w stop
            chown -R root:root "${PGDATA}"
            touch "${PGDIR}/initialized"
          fi
      containers:
      - name: postgis
        image: mediagis/nominatim:3.4
        # image: localhost:5000/nominatim:3.4
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/11
        command:
        - /usr/bin/bash
        - -c
        args:
        - |
          chown -R postgres:postgres /var/lib/postgresql
          service postgresql start
          tail -f /var/log/postgresql/postgresql-11-main.log
        env:
        - name: PGDIR
          value: /var/lib/postgresql/11
        - name: PGDATA
          value: /var/lib/postgresql/11/main
        # args:
        # - 'ls -la /var/lib/postgresql/11/main'
        #env:
        ## FIXME create random password in secret on commandline
        #- name: POSTGRES_USER
        #  value: nominatim-admin
        #- name: POSTGRES_PASSWORD
        #  value: n0mn0m
        #- name: POSTGRES_DB
        #  value: nominatimdb
        ports:
        - containerPort: 5432
      # No pre-stop hook is required, a SIGTERM plus some time is all that's
      # needed for graceful shutdown of a node.
#      terminationGracePeriodSeconds: 60
  # FIXME needs openebs
  # volumeClaimTemplates:
  # - metadata:
  #     name: data
  #   spec:
  #     accessModes:
  #     - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 5Gi
      # storageClassName: high-performance-high-resilience
