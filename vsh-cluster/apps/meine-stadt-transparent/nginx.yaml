apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: nginx
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
    targetPort: nginx
  selector:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: nginx

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: meine-stadt-transparent
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
spec:
  rules:
  - host: $(HOST)
    http:
      paths:
      - backend:
          service:
            name: nginx
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - $(HOST)
    secretName: meine-stadt-transparent-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
        app.kubernetes.io/component: nginx
    spec:
      volumes:
      - name: static-files-volume
        emptyDir: {}
      - name: nginx-tmp
        emptyDir: {}
      - name: nginx-confd
        emptyDir: {}
      - name: template
        configMap:
          name: nginx-template
      initContainers:
      - name: copy-static
        image: konstin2/meine-stadt-transparent:v0.2.9
        command:
          - cp
          - -r
          - /static
          - /static-files
        volumeMounts:
        - mountPath: /static-files
          name: static-files-volume
        securityContext:
          runAsUser: 33
          runAsGroup: 33
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 60m
            memory: 64Mi
      containers:
      - name: nginx
        image: nginxinc/nginx-unprivileged:1.20-alpine
        ports:
        - containerPort: 8080
          name: nginx
        - containerPort: 8081
          name: probe
        livenessProbe:
          httpGet:
            path: /ok
            port: probe
          initialDelaySeconds: 3
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ok
            port: probe
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - mountPath: /static
          name: static-files-volume
          subPath: static
          readOnly: true
        - mountPath: /etc/nginx/templates/meine-stadt-transparent.conf.template
          name: template
          subPath: nginx-conf.template
          readOnly: true
        - mountPath: /tmp
          name: nginx-tmp
        - mountPath: /etc/nginx/conf.d
          name: nginx-confd
        env:
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: deployment-properties
              key: HOST
        securityContext:
          runAsUser: 101
          runAsGroup: 101
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
